{-
   OpenAI API

   APIs for sampling from and fine-tuning language models

   OpenAPI Version: 3.0.0
   OpenAI API API version: 2.0.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OpenAI.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OpenAI.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import OpenAI.Model
import OpenAI.Core


-- * ChatCompletionFunctions

-- | 'chatCompletionFunctionsName' Lens
chatCompletionFunctionsNameL :: Lens_' ChatCompletionFunctions (Text)
chatCompletionFunctionsNameL f ChatCompletionFunctions{..} = (\chatCompletionFunctionsName -> ChatCompletionFunctions { chatCompletionFunctionsName, ..} ) <$> f chatCompletionFunctionsName
{-# INLINE chatCompletionFunctionsNameL #-}

-- | 'chatCompletionFunctionsDescription' Lens
chatCompletionFunctionsDescriptionL :: Lens_' ChatCompletionFunctions (Maybe Text)
chatCompletionFunctionsDescriptionL f ChatCompletionFunctions{..} = (\chatCompletionFunctionsDescription -> ChatCompletionFunctions { chatCompletionFunctionsDescription, ..} ) <$> f chatCompletionFunctionsDescription
{-# INLINE chatCompletionFunctionsDescriptionL #-}

-- | 'chatCompletionFunctionsParameters' Lens
chatCompletionFunctionsParametersL :: Lens_' ChatCompletionFunctions (Maybe (Map.Map String A.Value))
chatCompletionFunctionsParametersL f ChatCompletionFunctions{..} = (\chatCompletionFunctionsParameters -> ChatCompletionFunctions { chatCompletionFunctionsParameters, ..} ) <$> f chatCompletionFunctionsParameters
{-# INLINE chatCompletionFunctionsParametersL #-}



-- * ChatCompletionRequestMessage

-- | 'chatCompletionRequestMessageRole' Lens
chatCompletionRequestMessageRoleL :: Lens_' ChatCompletionRequestMessage (E'Role)
chatCompletionRequestMessageRoleL f ChatCompletionRequestMessage{..} = (\chatCompletionRequestMessageRole -> ChatCompletionRequestMessage { chatCompletionRequestMessageRole, ..} ) <$> f chatCompletionRequestMessageRole
{-# INLINE chatCompletionRequestMessageRoleL #-}

-- | 'chatCompletionRequestMessageContent' Lens
chatCompletionRequestMessageContentL :: Lens_' ChatCompletionRequestMessage (Maybe Text)
chatCompletionRequestMessageContentL f ChatCompletionRequestMessage{..} = (\chatCompletionRequestMessageContent -> ChatCompletionRequestMessage { chatCompletionRequestMessageContent, ..} ) <$> f chatCompletionRequestMessageContent
{-# INLINE chatCompletionRequestMessageContentL #-}

-- | 'chatCompletionRequestMessageName' Lens
chatCompletionRequestMessageNameL :: Lens_' ChatCompletionRequestMessage (Maybe Text)
chatCompletionRequestMessageNameL f ChatCompletionRequestMessage{..} = (\chatCompletionRequestMessageName -> ChatCompletionRequestMessage { chatCompletionRequestMessageName, ..} ) <$> f chatCompletionRequestMessageName
{-# INLINE chatCompletionRequestMessageNameL #-}

-- | 'chatCompletionRequestMessageFunctionCall' Lens
chatCompletionRequestMessageFunctionCallL :: Lens_' ChatCompletionRequestMessage (Maybe ChatCompletionRequestMessageFunctionCall)
chatCompletionRequestMessageFunctionCallL f ChatCompletionRequestMessage{..} = (\chatCompletionRequestMessageFunctionCall -> ChatCompletionRequestMessage { chatCompletionRequestMessageFunctionCall, ..} ) <$> f chatCompletionRequestMessageFunctionCall
{-# INLINE chatCompletionRequestMessageFunctionCallL #-}



-- * ChatCompletionRequestMessageFunctionCall

-- | 'chatCompletionRequestMessageFunctionCallName' Lens
chatCompletionRequestMessageFunctionCallNameL :: Lens_' ChatCompletionRequestMessageFunctionCall (Maybe Text)
chatCompletionRequestMessageFunctionCallNameL f ChatCompletionRequestMessageFunctionCall{..} = (\chatCompletionRequestMessageFunctionCallName -> ChatCompletionRequestMessageFunctionCall { chatCompletionRequestMessageFunctionCallName, ..} ) <$> f chatCompletionRequestMessageFunctionCallName
{-# INLINE chatCompletionRequestMessageFunctionCallNameL #-}

-- | 'chatCompletionRequestMessageFunctionCallArguments' Lens
chatCompletionRequestMessageFunctionCallArgumentsL :: Lens_' ChatCompletionRequestMessageFunctionCall (Maybe Text)
chatCompletionRequestMessageFunctionCallArgumentsL f ChatCompletionRequestMessageFunctionCall{..} = (\chatCompletionRequestMessageFunctionCallArguments -> ChatCompletionRequestMessageFunctionCall { chatCompletionRequestMessageFunctionCallArguments, ..} ) <$> f chatCompletionRequestMessageFunctionCallArguments
{-# INLINE chatCompletionRequestMessageFunctionCallArgumentsL #-}



-- * ChatCompletionResponseMessage

-- | 'chatCompletionResponseMessageRole' Lens
chatCompletionResponseMessageRoleL :: Lens_' ChatCompletionResponseMessage (E'Role)
chatCompletionResponseMessageRoleL f ChatCompletionResponseMessage{..} = (\chatCompletionResponseMessageRole -> ChatCompletionResponseMessage { chatCompletionResponseMessageRole, ..} ) <$> f chatCompletionResponseMessageRole
{-# INLINE chatCompletionResponseMessageRoleL #-}

-- | 'chatCompletionResponseMessageContent' Lens
chatCompletionResponseMessageContentL :: Lens_' ChatCompletionResponseMessage (Maybe Text)
chatCompletionResponseMessageContentL f ChatCompletionResponseMessage{..} = (\chatCompletionResponseMessageContent -> ChatCompletionResponseMessage { chatCompletionResponseMessageContent, ..} ) <$> f chatCompletionResponseMessageContent
{-# INLINE chatCompletionResponseMessageContentL #-}

-- | 'chatCompletionResponseMessageFunctionCall' Lens
chatCompletionResponseMessageFunctionCallL :: Lens_' ChatCompletionResponseMessage (Maybe ChatCompletionRequestMessageFunctionCall)
chatCompletionResponseMessageFunctionCallL f ChatCompletionResponseMessage{..} = (\chatCompletionResponseMessageFunctionCall -> ChatCompletionResponseMessage { chatCompletionResponseMessageFunctionCall, ..} ) <$> f chatCompletionResponseMessageFunctionCall
{-# INLINE chatCompletionResponseMessageFunctionCallL #-}



-- * ChatCompletionStreamResponseDelta

-- | 'chatCompletionStreamResponseDeltaRole' Lens
chatCompletionStreamResponseDeltaRoleL :: Lens_' ChatCompletionStreamResponseDelta (Maybe E'Role)
chatCompletionStreamResponseDeltaRoleL f ChatCompletionStreamResponseDelta{..} = (\chatCompletionStreamResponseDeltaRole -> ChatCompletionStreamResponseDelta { chatCompletionStreamResponseDeltaRole, ..} ) <$> f chatCompletionStreamResponseDeltaRole
{-# INLINE chatCompletionStreamResponseDeltaRoleL #-}

-- | 'chatCompletionStreamResponseDeltaContent' Lens
chatCompletionStreamResponseDeltaContentL :: Lens_' ChatCompletionStreamResponseDelta (Maybe Text)
chatCompletionStreamResponseDeltaContentL f ChatCompletionStreamResponseDelta{..} = (\chatCompletionStreamResponseDeltaContent -> ChatCompletionStreamResponseDelta { chatCompletionStreamResponseDeltaContent, ..} ) <$> f chatCompletionStreamResponseDeltaContent
{-# INLINE chatCompletionStreamResponseDeltaContentL #-}

-- | 'chatCompletionStreamResponseDeltaFunctionCall' Lens
chatCompletionStreamResponseDeltaFunctionCallL :: Lens_' ChatCompletionStreamResponseDelta (Maybe ChatCompletionRequestMessageFunctionCall)
chatCompletionStreamResponseDeltaFunctionCallL f ChatCompletionStreamResponseDelta{..} = (\chatCompletionStreamResponseDeltaFunctionCall -> ChatCompletionStreamResponseDelta { chatCompletionStreamResponseDeltaFunctionCall, ..} ) <$> f chatCompletionStreamResponseDeltaFunctionCall
{-# INLINE chatCompletionStreamResponseDeltaFunctionCallL #-}



-- * CreateChatCompletionRequest

-- | 'createChatCompletionRequestModel' Lens
createChatCompletionRequestModelL :: Lens_' CreateChatCompletionRequest (CreateChatCompletionRequestModel)
createChatCompletionRequestModelL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestModel -> CreateChatCompletionRequest { createChatCompletionRequestModel, ..} ) <$> f createChatCompletionRequestModel
{-# INLINE createChatCompletionRequestModelL #-}

-- | 'createChatCompletionRequestMessages' Lens
createChatCompletionRequestMessagesL :: Lens_' CreateChatCompletionRequest ([ChatCompletionRequestMessage])
createChatCompletionRequestMessagesL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestMessages -> CreateChatCompletionRequest { createChatCompletionRequestMessages, ..} ) <$> f createChatCompletionRequestMessages
{-# INLINE createChatCompletionRequestMessagesL #-}

-- | 'createChatCompletionRequestFunctions' Lens
createChatCompletionRequestFunctionsL :: Lens_' CreateChatCompletionRequest (Maybe [ChatCompletionFunctions])
createChatCompletionRequestFunctionsL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestFunctions -> CreateChatCompletionRequest { createChatCompletionRequestFunctions, ..} ) <$> f createChatCompletionRequestFunctions
{-# INLINE createChatCompletionRequestFunctionsL #-}

-- | 'createChatCompletionRequestFunctionCall' Lens
createChatCompletionRequestFunctionCallL :: Lens_' CreateChatCompletionRequest (Maybe CreateChatCompletionRequestFunctionCall)
createChatCompletionRequestFunctionCallL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestFunctionCall -> CreateChatCompletionRequest { createChatCompletionRequestFunctionCall, ..} ) <$> f createChatCompletionRequestFunctionCall
{-# INLINE createChatCompletionRequestFunctionCallL #-}

-- | 'createChatCompletionRequestTemperature' Lens
createChatCompletionRequestTemperatureL :: Lens_' CreateChatCompletionRequest (Maybe Double)
createChatCompletionRequestTemperatureL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestTemperature -> CreateChatCompletionRequest { createChatCompletionRequestTemperature, ..} ) <$> f createChatCompletionRequestTemperature
{-# INLINE createChatCompletionRequestTemperatureL #-}

-- | 'createChatCompletionRequestTopP' Lens
createChatCompletionRequestTopPL :: Lens_' CreateChatCompletionRequest (Maybe Double)
createChatCompletionRequestTopPL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestTopP -> CreateChatCompletionRequest { createChatCompletionRequestTopP, ..} ) <$> f createChatCompletionRequestTopP
{-# INLINE createChatCompletionRequestTopPL #-}

-- | 'createChatCompletionRequestN' Lens
createChatCompletionRequestNL :: Lens_' CreateChatCompletionRequest (Maybe Int)
createChatCompletionRequestNL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestN -> CreateChatCompletionRequest { createChatCompletionRequestN, ..} ) <$> f createChatCompletionRequestN
{-# INLINE createChatCompletionRequestNL #-}

-- | 'createChatCompletionRequestStream' Lens
createChatCompletionRequestStreamL :: Lens_' CreateChatCompletionRequest (Maybe Bool)
createChatCompletionRequestStreamL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestStream -> CreateChatCompletionRequest { createChatCompletionRequestStream, ..} ) <$> f createChatCompletionRequestStream
{-# INLINE createChatCompletionRequestStreamL #-}

-- | 'createChatCompletionRequestStop' Lens
createChatCompletionRequestStopL :: Lens_' CreateChatCompletionRequest (Maybe CreateChatCompletionRequestStop)
createChatCompletionRequestStopL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestStop -> CreateChatCompletionRequest { createChatCompletionRequestStop, ..} ) <$> f createChatCompletionRequestStop
{-# INLINE createChatCompletionRequestStopL #-}

-- | 'createChatCompletionRequestMaxTokens' Lens
createChatCompletionRequestMaxTokensL :: Lens_' CreateChatCompletionRequest (Maybe Int)
createChatCompletionRequestMaxTokensL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestMaxTokens -> CreateChatCompletionRequest { createChatCompletionRequestMaxTokens, ..} ) <$> f createChatCompletionRequestMaxTokens
{-# INLINE createChatCompletionRequestMaxTokensL #-}

-- | 'createChatCompletionRequestPresencePenalty' Lens
createChatCompletionRequestPresencePenaltyL :: Lens_' CreateChatCompletionRequest (Maybe Double)
createChatCompletionRequestPresencePenaltyL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestPresencePenalty -> CreateChatCompletionRequest { createChatCompletionRequestPresencePenalty, ..} ) <$> f createChatCompletionRequestPresencePenalty
{-# INLINE createChatCompletionRequestPresencePenaltyL #-}

-- | 'createChatCompletionRequestFrequencyPenalty' Lens
createChatCompletionRequestFrequencyPenaltyL :: Lens_' CreateChatCompletionRequest (Maybe Double)
createChatCompletionRequestFrequencyPenaltyL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestFrequencyPenalty -> CreateChatCompletionRequest { createChatCompletionRequestFrequencyPenalty, ..} ) <$> f createChatCompletionRequestFrequencyPenalty
{-# INLINE createChatCompletionRequestFrequencyPenaltyL #-}

-- | 'createChatCompletionRequestLogitBias' Lens
createChatCompletionRequestLogitBiasL :: Lens_' CreateChatCompletionRequest (Maybe A.Value)
createChatCompletionRequestLogitBiasL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestLogitBias -> CreateChatCompletionRequest { createChatCompletionRequestLogitBias, ..} ) <$> f createChatCompletionRequestLogitBias
{-# INLINE createChatCompletionRequestLogitBiasL #-}

-- | 'createChatCompletionRequestUser' Lens
createChatCompletionRequestUserL :: Lens_' CreateChatCompletionRequest (Maybe Text)
createChatCompletionRequestUserL f CreateChatCompletionRequest{..} = (\createChatCompletionRequestUser -> CreateChatCompletionRequest { createChatCompletionRequestUser, ..} ) <$> f createChatCompletionRequestUser
{-# INLINE createChatCompletionRequestUserL #-}



-- * CreateChatCompletionRequestFunctionCall

-- | 'createChatCompletionRequestFunctionCallName' Lens
createChatCompletionRequestFunctionCallNameL :: Lens_' CreateChatCompletionRequestFunctionCall (Text)
createChatCompletionRequestFunctionCallNameL f CreateChatCompletionRequestFunctionCall{..} = (\createChatCompletionRequestFunctionCallName -> CreateChatCompletionRequestFunctionCall { createChatCompletionRequestFunctionCallName, ..} ) <$> f createChatCompletionRequestFunctionCallName
{-# INLINE createChatCompletionRequestFunctionCallNameL #-}



-- * CreateChatCompletionRequestFunctionCallOneOf

-- | 'createChatCompletionRequestFunctionCallOneOfName' Lens
createChatCompletionRequestFunctionCallOneOfNameL :: Lens_' CreateChatCompletionRequestFunctionCallOneOf (Text)
createChatCompletionRequestFunctionCallOneOfNameL f CreateChatCompletionRequestFunctionCallOneOf{..} = (\createChatCompletionRequestFunctionCallOneOfName -> CreateChatCompletionRequestFunctionCallOneOf { createChatCompletionRequestFunctionCallOneOfName, ..} ) <$> f createChatCompletionRequestFunctionCallOneOfName
{-# INLINE createChatCompletionRequestFunctionCallOneOfNameL #-}



-- * CreateChatCompletionRequestModel



-- * CreateChatCompletionRequestStop



-- * CreateChatCompletionResponse

-- | 'createChatCompletionResponseId' Lens
createChatCompletionResponseIdL :: Lens_' CreateChatCompletionResponse (Text)
createChatCompletionResponseIdL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseId -> CreateChatCompletionResponse { createChatCompletionResponseId, ..} ) <$> f createChatCompletionResponseId
{-# INLINE createChatCompletionResponseIdL #-}

-- | 'createChatCompletionResponseObject' Lens
createChatCompletionResponseObjectL :: Lens_' CreateChatCompletionResponse (Text)
createChatCompletionResponseObjectL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseObject -> CreateChatCompletionResponse { createChatCompletionResponseObject, ..} ) <$> f createChatCompletionResponseObject
{-# INLINE createChatCompletionResponseObjectL #-}

-- | 'createChatCompletionResponseCreated' Lens
createChatCompletionResponseCreatedL :: Lens_' CreateChatCompletionResponse (Int)
createChatCompletionResponseCreatedL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseCreated -> CreateChatCompletionResponse { createChatCompletionResponseCreated, ..} ) <$> f createChatCompletionResponseCreated
{-# INLINE createChatCompletionResponseCreatedL #-}

-- | 'createChatCompletionResponseModel' Lens
createChatCompletionResponseModelL :: Lens_' CreateChatCompletionResponse (Text)
createChatCompletionResponseModelL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseModel -> CreateChatCompletionResponse { createChatCompletionResponseModel, ..} ) <$> f createChatCompletionResponseModel
{-# INLINE createChatCompletionResponseModelL #-}

-- | 'createChatCompletionResponseChoices' Lens
createChatCompletionResponseChoicesL :: Lens_' CreateChatCompletionResponse ([CreateChatCompletionResponseChoicesInner])
createChatCompletionResponseChoicesL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseChoices -> CreateChatCompletionResponse { createChatCompletionResponseChoices, ..} ) <$> f createChatCompletionResponseChoices
{-# INLINE createChatCompletionResponseChoicesL #-}

-- | 'createChatCompletionResponseUsage' Lens
createChatCompletionResponseUsageL :: Lens_' CreateChatCompletionResponse (Maybe CreateCompletionResponseUsage)
createChatCompletionResponseUsageL f CreateChatCompletionResponse{..} = (\createChatCompletionResponseUsage -> CreateChatCompletionResponse { createChatCompletionResponseUsage, ..} ) <$> f createChatCompletionResponseUsage
{-# INLINE createChatCompletionResponseUsageL #-}



-- * CreateChatCompletionResponseChoicesInner

-- | 'createChatCompletionResponseChoicesInnerIndex' Lens
createChatCompletionResponseChoicesInnerIndexL :: Lens_' CreateChatCompletionResponseChoicesInner (Maybe Int)
createChatCompletionResponseChoicesInnerIndexL f CreateChatCompletionResponseChoicesInner{..} = (\createChatCompletionResponseChoicesInnerIndex -> CreateChatCompletionResponseChoicesInner { createChatCompletionResponseChoicesInnerIndex, ..} ) <$> f createChatCompletionResponseChoicesInnerIndex
{-# INLINE createChatCompletionResponseChoicesInnerIndexL #-}

-- | 'createChatCompletionResponseChoicesInnerMessage' Lens
createChatCompletionResponseChoicesInnerMessageL :: Lens_' CreateChatCompletionResponseChoicesInner (Maybe ChatCompletionResponseMessage)
createChatCompletionResponseChoicesInnerMessageL f CreateChatCompletionResponseChoicesInner{..} = (\createChatCompletionResponseChoicesInnerMessage -> CreateChatCompletionResponseChoicesInner { createChatCompletionResponseChoicesInnerMessage, ..} ) <$> f createChatCompletionResponseChoicesInnerMessage
{-# INLINE createChatCompletionResponseChoicesInnerMessageL #-}

-- | 'createChatCompletionResponseChoicesInnerFinishReason' Lens
createChatCompletionResponseChoicesInnerFinishReasonL :: Lens_' CreateChatCompletionResponseChoicesInner (Maybe E'FinishReason2)
createChatCompletionResponseChoicesInnerFinishReasonL f CreateChatCompletionResponseChoicesInner{..} = (\createChatCompletionResponseChoicesInnerFinishReason -> CreateChatCompletionResponseChoicesInner { createChatCompletionResponseChoicesInnerFinishReason, ..} ) <$> f createChatCompletionResponseChoicesInnerFinishReason
{-# INLINE createChatCompletionResponseChoicesInnerFinishReasonL #-}



-- * CreateChatCompletionStreamResponse

-- | 'createChatCompletionStreamResponseId' Lens
createChatCompletionStreamResponseIdL :: Lens_' CreateChatCompletionStreamResponse (Text)
createChatCompletionStreamResponseIdL f CreateChatCompletionStreamResponse{..} = (\createChatCompletionStreamResponseId -> CreateChatCompletionStreamResponse { createChatCompletionStreamResponseId, ..} ) <$> f createChatCompletionStreamResponseId
{-# INLINE createChatCompletionStreamResponseIdL #-}

-- | 'createChatCompletionStreamResponseObject' Lens
createChatCompletionStreamResponseObjectL :: Lens_' CreateChatCompletionStreamResponse (Text)
createChatCompletionStreamResponseObjectL f CreateChatCompletionStreamResponse{..} = (\createChatCompletionStreamResponseObject -> CreateChatCompletionStreamResponse { createChatCompletionStreamResponseObject, ..} ) <$> f createChatCompletionStreamResponseObject
{-# INLINE createChatCompletionStreamResponseObjectL #-}

-- | 'createChatCompletionStreamResponseCreated' Lens
createChatCompletionStreamResponseCreatedL :: Lens_' CreateChatCompletionStreamResponse (Int)
createChatCompletionStreamResponseCreatedL f CreateChatCompletionStreamResponse{..} = (\createChatCompletionStreamResponseCreated -> CreateChatCompletionStreamResponse { createChatCompletionStreamResponseCreated, ..} ) <$> f createChatCompletionStreamResponseCreated
{-# INLINE createChatCompletionStreamResponseCreatedL #-}

-- | 'createChatCompletionStreamResponseModel' Lens
createChatCompletionStreamResponseModelL :: Lens_' CreateChatCompletionStreamResponse (Text)
createChatCompletionStreamResponseModelL f CreateChatCompletionStreamResponse{..} = (\createChatCompletionStreamResponseModel -> CreateChatCompletionStreamResponse { createChatCompletionStreamResponseModel, ..} ) <$> f createChatCompletionStreamResponseModel
{-# INLINE createChatCompletionStreamResponseModelL #-}

-- | 'createChatCompletionStreamResponseChoices' Lens
createChatCompletionStreamResponseChoicesL :: Lens_' CreateChatCompletionStreamResponse ([CreateChatCompletionStreamResponseChoicesInner])
createChatCompletionStreamResponseChoicesL f CreateChatCompletionStreamResponse{..} = (\createChatCompletionStreamResponseChoices -> CreateChatCompletionStreamResponse { createChatCompletionStreamResponseChoices, ..} ) <$> f createChatCompletionStreamResponseChoices
{-# INLINE createChatCompletionStreamResponseChoicesL #-}



-- * CreateChatCompletionStreamResponseChoicesInner

-- | 'createChatCompletionStreamResponseChoicesInnerIndex' Lens
createChatCompletionStreamResponseChoicesInnerIndexL :: Lens_' CreateChatCompletionStreamResponseChoicesInner (Maybe Int)
createChatCompletionStreamResponseChoicesInnerIndexL f CreateChatCompletionStreamResponseChoicesInner{..} = (\createChatCompletionStreamResponseChoicesInnerIndex -> CreateChatCompletionStreamResponseChoicesInner { createChatCompletionStreamResponseChoicesInnerIndex, ..} ) <$> f createChatCompletionStreamResponseChoicesInnerIndex
{-# INLINE createChatCompletionStreamResponseChoicesInnerIndexL #-}

-- | 'createChatCompletionStreamResponseChoicesInnerDelta' Lens
createChatCompletionStreamResponseChoicesInnerDeltaL :: Lens_' CreateChatCompletionStreamResponseChoicesInner (Maybe ChatCompletionStreamResponseDelta)
createChatCompletionStreamResponseChoicesInnerDeltaL f CreateChatCompletionStreamResponseChoicesInner{..} = (\createChatCompletionStreamResponseChoicesInnerDelta -> CreateChatCompletionStreamResponseChoicesInner { createChatCompletionStreamResponseChoicesInnerDelta, ..} ) <$> f createChatCompletionStreamResponseChoicesInnerDelta
{-# INLINE createChatCompletionStreamResponseChoicesInnerDeltaL #-}

-- | 'createChatCompletionStreamResponseChoicesInnerFinishReason' Lens
createChatCompletionStreamResponseChoicesInnerFinishReasonL :: Lens_' CreateChatCompletionStreamResponseChoicesInner (Maybe E'FinishReason2)
createChatCompletionStreamResponseChoicesInnerFinishReasonL f CreateChatCompletionStreamResponseChoicesInner{..} = (\createChatCompletionStreamResponseChoicesInnerFinishReason -> CreateChatCompletionStreamResponseChoicesInner { createChatCompletionStreamResponseChoicesInnerFinishReason, ..} ) <$> f createChatCompletionStreamResponseChoicesInnerFinishReason
{-# INLINE createChatCompletionStreamResponseChoicesInnerFinishReasonL #-}



-- * CreateCompletionRequest

-- | 'createCompletionRequestModel' Lens
createCompletionRequestModelL :: Lens_' CreateCompletionRequest (CreateCompletionRequestModel)
createCompletionRequestModelL f CreateCompletionRequest{..} = (\createCompletionRequestModel -> CreateCompletionRequest { createCompletionRequestModel, ..} ) <$> f createCompletionRequestModel
{-# INLINE createCompletionRequestModelL #-}

-- | 'createCompletionRequestPrompt' Lens
createCompletionRequestPromptL :: Lens_' CreateCompletionRequest (CreateCompletionRequestPrompt)
createCompletionRequestPromptL f CreateCompletionRequest{..} = (\createCompletionRequestPrompt -> CreateCompletionRequest { createCompletionRequestPrompt, ..} ) <$> f createCompletionRequestPrompt
{-# INLINE createCompletionRequestPromptL #-}

-- | 'createCompletionRequestSuffix' Lens
createCompletionRequestSuffixL :: Lens_' CreateCompletionRequest (Maybe Text)
createCompletionRequestSuffixL f CreateCompletionRequest{..} = (\createCompletionRequestSuffix -> CreateCompletionRequest { createCompletionRequestSuffix, ..} ) <$> f createCompletionRequestSuffix
{-# INLINE createCompletionRequestSuffixL #-}

-- | 'createCompletionRequestMaxTokens' Lens
createCompletionRequestMaxTokensL :: Lens_' CreateCompletionRequest (Maybe Int)
createCompletionRequestMaxTokensL f CreateCompletionRequest{..} = (\createCompletionRequestMaxTokens -> CreateCompletionRequest { createCompletionRequestMaxTokens, ..} ) <$> f createCompletionRequestMaxTokens
{-# INLINE createCompletionRequestMaxTokensL #-}

-- | 'createCompletionRequestTemperature' Lens
createCompletionRequestTemperatureL :: Lens_' CreateCompletionRequest (Maybe Double)
createCompletionRequestTemperatureL f CreateCompletionRequest{..} = (\createCompletionRequestTemperature -> CreateCompletionRequest { createCompletionRequestTemperature, ..} ) <$> f createCompletionRequestTemperature
{-# INLINE createCompletionRequestTemperatureL #-}

-- | 'createCompletionRequestTopP' Lens
createCompletionRequestTopPL :: Lens_' CreateCompletionRequest (Maybe Double)
createCompletionRequestTopPL f CreateCompletionRequest{..} = (\createCompletionRequestTopP -> CreateCompletionRequest { createCompletionRequestTopP, ..} ) <$> f createCompletionRequestTopP
{-# INLINE createCompletionRequestTopPL #-}

-- | 'createCompletionRequestN' Lens
createCompletionRequestNL :: Lens_' CreateCompletionRequest (Maybe Int)
createCompletionRequestNL f CreateCompletionRequest{..} = (\createCompletionRequestN -> CreateCompletionRequest { createCompletionRequestN, ..} ) <$> f createCompletionRequestN
{-# INLINE createCompletionRequestNL #-}

-- | 'createCompletionRequestStream' Lens
createCompletionRequestStreamL :: Lens_' CreateCompletionRequest (Maybe Bool)
createCompletionRequestStreamL f CreateCompletionRequest{..} = (\createCompletionRequestStream -> CreateCompletionRequest { createCompletionRequestStream, ..} ) <$> f createCompletionRequestStream
{-# INLINE createCompletionRequestStreamL #-}

-- | 'createCompletionRequestLogprobs' Lens
createCompletionRequestLogprobsL :: Lens_' CreateCompletionRequest (Maybe Int)
createCompletionRequestLogprobsL f CreateCompletionRequest{..} = (\createCompletionRequestLogprobs -> CreateCompletionRequest { createCompletionRequestLogprobs, ..} ) <$> f createCompletionRequestLogprobs
{-# INLINE createCompletionRequestLogprobsL #-}

-- | 'createCompletionRequestEcho' Lens
createCompletionRequestEchoL :: Lens_' CreateCompletionRequest (Maybe Bool)
createCompletionRequestEchoL f CreateCompletionRequest{..} = (\createCompletionRequestEcho -> CreateCompletionRequest { createCompletionRequestEcho, ..} ) <$> f createCompletionRequestEcho
{-# INLINE createCompletionRequestEchoL #-}

-- | 'createCompletionRequestStop' Lens
createCompletionRequestStopL :: Lens_' CreateCompletionRequest (Maybe CreateCompletionRequestStop)
createCompletionRequestStopL f CreateCompletionRequest{..} = (\createCompletionRequestStop -> CreateCompletionRequest { createCompletionRequestStop, ..} ) <$> f createCompletionRequestStop
{-# INLINE createCompletionRequestStopL #-}

-- | 'createCompletionRequestPresencePenalty' Lens
createCompletionRequestPresencePenaltyL :: Lens_' CreateCompletionRequest (Maybe Double)
createCompletionRequestPresencePenaltyL f CreateCompletionRequest{..} = (\createCompletionRequestPresencePenalty -> CreateCompletionRequest { createCompletionRequestPresencePenalty, ..} ) <$> f createCompletionRequestPresencePenalty
{-# INLINE createCompletionRequestPresencePenaltyL #-}

-- | 'createCompletionRequestFrequencyPenalty' Lens
createCompletionRequestFrequencyPenaltyL :: Lens_' CreateCompletionRequest (Maybe Double)
createCompletionRequestFrequencyPenaltyL f CreateCompletionRequest{..} = (\createCompletionRequestFrequencyPenalty -> CreateCompletionRequest { createCompletionRequestFrequencyPenalty, ..} ) <$> f createCompletionRequestFrequencyPenalty
{-# INLINE createCompletionRequestFrequencyPenaltyL #-}

-- | 'createCompletionRequestBestOf' Lens
createCompletionRequestBestOfL :: Lens_' CreateCompletionRequest (Maybe Int)
createCompletionRequestBestOfL f CreateCompletionRequest{..} = (\createCompletionRequestBestOf -> CreateCompletionRequest { createCompletionRequestBestOf, ..} ) <$> f createCompletionRequestBestOf
{-# INLINE createCompletionRequestBestOfL #-}

-- | 'createCompletionRequestLogitBias' Lens
createCompletionRequestLogitBiasL :: Lens_' CreateCompletionRequest (Maybe A.Value)
createCompletionRequestLogitBiasL f CreateCompletionRequest{..} = (\createCompletionRequestLogitBias -> CreateCompletionRequest { createCompletionRequestLogitBias, ..} ) <$> f createCompletionRequestLogitBias
{-# INLINE createCompletionRequestLogitBiasL #-}

-- | 'createCompletionRequestUser' Lens
createCompletionRequestUserL :: Lens_' CreateCompletionRequest (Maybe Text)
createCompletionRequestUserL f CreateCompletionRequest{..} = (\createCompletionRequestUser -> CreateCompletionRequest { createCompletionRequestUser, ..} ) <$> f createCompletionRequestUser
{-# INLINE createCompletionRequestUserL #-}



-- * CreateCompletionRequestModel



-- * CreateCompletionRequestPrompt



-- * CreateCompletionRequestStop



-- * CreateCompletionResponse

-- | 'createCompletionResponseId' Lens
createCompletionResponseIdL :: Lens_' CreateCompletionResponse (Text)
createCompletionResponseIdL f CreateCompletionResponse{..} = (\createCompletionResponseId -> CreateCompletionResponse { createCompletionResponseId, ..} ) <$> f createCompletionResponseId
{-# INLINE createCompletionResponseIdL #-}

-- | 'createCompletionResponseObject' Lens
createCompletionResponseObjectL :: Lens_' CreateCompletionResponse (Text)
createCompletionResponseObjectL f CreateCompletionResponse{..} = (\createCompletionResponseObject -> CreateCompletionResponse { createCompletionResponseObject, ..} ) <$> f createCompletionResponseObject
{-# INLINE createCompletionResponseObjectL #-}

-- | 'createCompletionResponseCreated' Lens
createCompletionResponseCreatedL :: Lens_' CreateCompletionResponse (Int)
createCompletionResponseCreatedL f CreateCompletionResponse{..} = (\createCompletionResponseCreated -> CreateCompletionResponse { createCompletionResponseCreated, ..} ) <$> f createCompletionResponseCreated
{-# INLINE createCompletionResponseCreatedL #-}

-- | 'createCompletionResponseModel' Lens
createCompletionResponseModelL :: Lens_' CreateCompletionResponse (Text)
createCompletionResponseModelL f CreateCompletionResponse{..} = (\createCompletionResponseModel -> CreateCompletionResponse { createCompletionResponseModel, ..} ) <$> f createCompletionResponseModel
{-# INLINE createCompletionResponseModelL #-}

-- | 'createCompletionResponseChoices' Lens
createCompletionResponseChoicesL :: Lens_' CreateCompletionResponse ([CreateCompletionResponseChoicesInner])
createCompletionResponseChoicesL f CreateCompletionResponse{..} = (\createCompletionResponseChoices -> CreateCompletionResponse { createCompletionResponseChoices, ..} ) <$> f createCompletionResponseChoices
{-# INLINE createCompletionResponseChoicesL #-}

-- | 'createCompletionResponseUsage' Lens
createCompletionResponseUsageL :: Lens_' CreateCompletionResponse (Maybe CreateCompletionResponseUsage)
createCompletionResponseUsageL f CreateCompletionResponse{..} = (\createCompletionResponseUsage -> CreateCompletionResponse { createCompletionResponseUsage, ..} ) <$> f createCompletionResponseUsage
{-# INLINE createCompletionResponseUsageL #-}



-- * CreateCompletionResponseChoicesInner

-- | 'createCompletionResponseChoicesInnerText' Lens
createCompletionResponseChoicesInnerTextL :: Lens_' CreateCompletionResponseChoicesInner (Text)
createCompletionResponseChoicesInnerTextL f CreateCompletionResponseChoicesInner{..} = (\createCompletionResponseChoicesInnerText -> CreateCompletionResponseChoicesInner { createCompletionResponseChoicesInnerText, ..} ) <$> f createCompletionResponseChoicesInnerText
{-# INLINE createCompletionResponseChoicesInnerTextL #-}

-- | 'createCompletionResponseChoicesInnerIndex' Lens
createCompletionResponseChoicesInnerIndexL :: Lens_' CreateCompletionResponseChoicesInner (Int)
createCompletionResponseChoicesInnerIndexL f CreateCompletionResponseChoicesInner{..} = (\createCompletionResponseChoicesInnerIndex -> CreateCompletionResponseChoicesInner { createCompletionResponseChoicesInnerIndex, ..} ) <$> f createCompletionResponseChoicesInnerIndex
{-# INLINE createCompletionResponseChoicesInnerIndexL #-}

-- | 'createCompletionResponseChoicesInnerLogprobs' Lens
createCompletionResponseChoicesInnerLogprobsL :: Lens_' CreateCompletionResponseChoicesInner (CreateCompletionResponseChoicesInnerLogprobs)
createCompletionResponseChoicesInnerLogprobsL f CreateCompletionResponseChoicesInner{..} = (\createCompletionResponseChoicesInnerLogprobs -> CreateCompletionResponseChoicesInner { createCompletionResponseChoicesInnerLogprobs, ..} ) <$> f createCompletionResponseChoicesInnerLogprobs
{-# INLINE createCompletionResponseChoicesInnerLogprobsL #-}

-- | 'createCompletionResponseChoicesInnerFinishReason' Lens
createCompletionResponseChoicesInnerFinishReasonL :: Lens_' CreateCompletionResponseChoicesInner (E'FinishReason)
createCompletionResponseChoicesInnerFinishReasonL f CreateCompletionResponseChoicesInner{..} = (\createCompletionResponseChoicesInnerFinishReason -> CreateCompletionResponseChoicesInner { createCompletionResponseChoicesInnerFinishReason, ..} ) <$> f createCompletionResponseChoicesInnerFinishReason
{-# INLINE createCompletionResponseChoicesInnerFinishReasonL #-}



-- * CreateCompletionResponseChoicesInnerLogprobs

-- | 'createCompletionResponseChoicesInnerLogprobsTokens' Lens
createCompletionResponseChoicesInnerLogprobsTokensL :: Lens_' CreateCompletionResponseChoicesInnerLogprobs (Maybe [Text])
createCompletionResponseChoicesInnerLogprobsTokensL f CreateCompletionResponseChoicesInnerLogprobs{..} = (\createCompletionResponseChoicesInnerLogprobsTokens -> CreateCompletionResponseChoicesInnerLogprobs { createCompletionResponseChoicesInnerLogprobsTokens, ..} ) <$> f createCompletionResponseChoicesInnerLogprobsTokens
{-# INLINE createCompletionResponseChoicesInnerLogprobsTokensL #-}

-- | 'createCompletionResponseChoicesInnerLogprobsTokenLogprobs' Lens
createCompletionResponseChoicesInnerLogprobsTokenLogprobsL :: Lens_' CreateCompletionResponseChoicesInnerLogprobs (Maybe [Double])
createCompletionResponseChoicesInnerLogprobsTokenLogprobsL f CreateCompletionResponseChoicesInnerLogprobs{..} = (\createCompletionResponseChoicesInnerLogprobsTokenLogprobs -> CreateCompletionResponseChoicesInnerLogprobs { createCompletionResponseChoicesInnerLogprobsTokenLogprobs, ..} ) <$> f createCompletionResponseChoicesInnerLogprobsTokenLogprobs
{-# INLINE createCompletionResponseChoicesInnerLogprobsTokenLogprobsL #-}

-- | 'createCompletionResponseChoicesInnerLogprobsTopLogprobs' Lens
createCompletionResponseChoicesInnerLogprobsTopLogprobsL :: Lens_' CreateCompletionResponseChoicesInnerLogprobs (Maybe [A.Value])
createCompletionResponseChoicesInnerLogprobsTopLogprobsL f CreateCompletionResponseChoicesInnerLogprobs{..} = (\createCompletionResponseChoicesInnerLogprobsTopLogprobs -> CreateCompletionResponseChoicesInnerLogprobs { createCompletionResponseChoicesInnerLogprobsTopLogprobs, ..} ) <$> f createCompletionResponseChoicesInnerLogprobsTopLogprobs
{-# INLINE createCompletionResponseChoicesInnerLogprobsTopLogprobsL #-}

-- | 'createCompletionResponseChoicesInnerLogprobsTextOffset' Lens
createCompletionResponseChoicesInnerLogprobsTextOffsetL :: Lens_' CreateCompletionResponseChoicesInnerLogprobs (Maybe [Int])
createCompletionResponseChoicesInnerLogprobsTextOffsetL f CreateCompletionResponseChoicesInnerLogprobs{..} = (\createCompletionResponseChoicesInnerLogprobsTextOffset -> CreateCompletionResponseChoicesInnerLogprobs { createCompletionResponseChoicesInnerLogprobsTextOffset, ..} ) <$> f createCompletionResponseChoicesInnerLogprobsTextOffset
{-# INLINE createCompletionResponseChoicesInnerLogprobsTextOffsetL #-}



-- * CreateCompletionResponseUsage

-- | 'createCompletionResponseUsagePromptTokens' Lens
createCompletionResponseUsagePromptTokensL :: Lens_' CreateCompletionResponseUsage (Int)
createCompletionResponseUsagePromptTokensL f CreateCompletionResponseUsage{..} = (\createCompletionResponseUsagePromptTokens -> CreateCompletionResponseUsage { createCompletionResponseUsagePromptTokens, ..} ) <$> f createCompletionResponseUsagePromptTokens
{-# INLINE createCompletionResponseUsagePromptTokensL #-}

-- | 'createCompletionResponseUsageCompletionTokens' Lens
createCompletionResponseUsageCompletionTokensL :: Lens_' CreateCompletionResponseUsage (Int)
createCompletionResponseUsageCompletionTokensL f CreateCompletionResponseUsage{..} = (\createCompletionResponseUsageCompletionTokens -> CreateCompletionResponseUsage { createCompletionResponseUsageCompletionTokens, ..} ) <$> f createCompletionResponseUsageCompletionTokens
{-# INLINE createCompletionResponseUsageCompletionTokensL #-}

-- | 'createCompletionResponseUsageTotalTokens' Lens
createCompletionResponseUsageTotalTokensL :: Lens_' CreateCompletionResponseUsage (Int)
createCompletionResponseUsageTotalTokensL f CreateCompletionResponseUsage{..} = (\createCompletionResponseUsageTotalTokens -> CreateCompletionResponseUsage { createCompletionResponseUsageTotalTokens, ..} ) <$> f createCompletionResponseUsageTotalTokens
{-# INLINE createCompletionResponseUsageTotalTokensL #-}



-- * CreateEditRequest

-- | 'createEditRequestModel' Lens
createEditRequestModelL :: Lens_' CreateEditRequest (CreateEditRequestModel)
createEditRequestModelL f CreateEditRequest{..} = (\createEditRequestModel -> CreateEditRequest { createEditRequestModel, ..} ) <$> f createEditRequestModel
{-# INLINE createEditRequestModelL #-}

-- | 'createEditRequestInput' Lens
createEditRequestInputL :: Lens_' CreateEditRequest (Maybe Text)
createEditRequestInputL f CreateEditRequest{..} = (\createEditRequestInput -> CreateEditRequest { createEditRequestInput, ..} ) <$> f createEditRequestInput
{-# INLINE createEditRequestInputL #-}

-- | 'createEditRequestInstruction' Lens
createEditRequestInstructionL :: Lens_' CreateEditRequest (Text)
createEditRequestInstructionL f CreateEditRequest{..} = (\createEditRequestInstruction -> CreateEditRequest { createEditRequestInstruction, ..} ) <$> f createEditRequestInstruction
{-# INLINE createEditRequestInstructionL #-}

-- | 'createEditRequestN' Lens
createEditRequestNL :: Lens_' CreateEditRequest (Maybe Int)
createEditRequestNL f CreateEditRequest{..} = (\createEditRequestN -> CreateEditRequest { createEditRequestN, ..} ) <$> f createEditRequestN
{-# INLINE createEditRequestNL #-}

-- | 'createEditRequestTemperature' Lens
createEditRequestTemperatureL :: Lens_' CreateEditRequest (Maybe Double)
createEditRequestTemperatureL f CreateEditRequest{..} = (\createEditRequestTemperature -> CreateEditRequest { createEditRequestTemperature, ..} ) <$> f createEditRequestTemperature
{-# INLINE createEditRequestTemperatureL #-}

-- | 'createEditRequestTopP' Lens
createEditRequestTopPL :: Lens_' CreateEditRequest (Maybe Double)
createEditRequestTopPL f CreateEditRequest{..} = (\createEditRequestTopP -> CreateEditRequest { createEditRequestTopP, ..} ) <$> f createEditRequestTopP
{-# INLINE createEditRequestTopPL #-}



-- * CreateEditRequestModel



-- * CreateEditResponse

-- | 'createEditResponseObject' Lens
createEditResponseObjectL :: Lens_' CreateEditResponse (Text)
createEditResponseObjectL f CreateEditResponse{..} = (\createEditResponseObject -> CreateEditResponse { createEditResponseObject, ..} ) <$> f createEditResponseObject
{-# INLINE createEditResponseObjectL #-}

-- | 'createEditResponseCreated' Lens
createEditResponseCreatedL :: Lens_' CreateEditResponse (Int)
createEditResponseCreatedL f CreateEditResponse{..} = (\createEditResponseCreated -> CreateEditResponse { createEditResponseCreated, ..} ) <$> f createEditResponseCreated
{-# INLINE createEditResponseCreatedL #-}

-- | 'createEditResponseChoices' Lens
createEditResponseChoicesL :: Lens_' CreateEditResponse ([CreateEditResponseChoicesInner])
createEditResponseChoicesL f CreateEditResponse{..} = (\createEditResponseChoices -> CreateEditResponse { createEditResponseChoices, ..} ) <$> f createEditResponseChoices
{-# INLINE createEditResponseChoicesL #-}

-- | 'createEditResponseUsage' Lens
createEditResponseUsageL :: Lens_' CreateEditResponse (CreateCompletionResponseUsage)
createEditResponseUsageL f CreateEditResponse{..} = (\createEditResponseUsage -> CreateEditResponse { createEditResponseUsage, ..} ) <$> f createEditResponseUsage
{-# INLINE createEditResponseUsageL #-}



-- * CreateEditResponseChoicesInner

-- | 'createEditResponseChoicesInnerText' Lens
createEditResponseChoicesInnerTextL :: Lens_' CreateEditResponseChoicesInner (Maybe Text)
createEditResponseChoicesInnerTextL f CreateEditResponseChoicesInner{..} = (\createEditResponseChoicesInnerText -> CreateEditResponseChoicesInner { createEditResponseChoicesInnerText, ..} ) <$> f createEditResponseChoicesInnerText
{-# INLINE createEditResponseChoicesInnerTextL #-}

-- | 'createEditResponseChoicesInnerIndex' Lens
createEditResponseChoicesInnerIndexL :: Lens_' CreateEditResponseChoicesInner (Maybe Int)
createEditResponseChoicesInnerIndexL f CreateEditResponseChoicesInner{..} = (\createEditResponseChoicesInnerIndex -> CreateEditResponseChoicesInner { createEditResponseChoicesInnerIndex, ..} ) <$> f createEditResponseChoicesInnerIndex
{-# INLINE createEditResponseChoicesInnerIndexL #-}

-- | 'createEditResponseChoicesInnerLogprobs' Lens
createEditResponseChoicesInnerLogprobsL :: Lens_' CreateEditResponseChoicesInner (Maybe CreateCompletionResponseChoicesInnerLogprobs)
createEditResponseChoicesInnerLogprobsL f CreateEditResponseChoicesInner{..} = (\createEditResponseChoicesInnerLogprobs -> CreateEditResponseChoicesInner { createEditResponseChoicesInnerLogprobs, ..} ) <$> f createEditResponseChoicesInnerLogprobs
{-# INLINE createEditResponseChoicesInnerLogprobsL #-}

-- | 'createEditResponseChoicesInnerFinishReason' Lens
createEditResponseChoicesInnerFinishReasonL :: Lens_' CreateEditResponseChoicesInner (Maybe E'FinishReason)
createEditResponseChoicesInnerFinishReasonL f CreateEditResponseChoicesInner{..} = (\createEditResponseChoicesInnerFinishReason -> CreateEditResponseChoicesInner { createEditResponseChoicesInnerFinishReason, ..} ) <$> f createEditResponseChoicesInnerFinishReason
{-# INLINE createEditResponseChoicesInnerFinishReasonL #-}



-- * CreateEmbeddingRequest

-- | 'createEmbeddingRequestModel' Lens
createEmbeddingRequestModelL :: Lens_' CreateEmbeddingRequest (CreateEmbeddingRequestModel)
createEmbeddingRequestModelL f CreateEmbeddingRequest{..} = (\createEmbeddingRequestModel -> CreateEmbeddingRequest { createEmbeddingRequestModel, ..} ) <$> f createEmbeddingRequestModel
{-# INLINE createEmbeddingRequestModelL #-}

-- | 'createEmbeddingRequestInput' Lens
createEmbeddingRequestInputL :: Lens_' CreateEmbeddingRequest (CreateEmbeddingRequestInput)
createEmbeddingRequestInputL f CreateEmbeddingRequest{..} = (\createEmbeddingRequestInput -> CreateEmbeddingRequest { createEmbeddingRequestInput, ..} ) <$> f createEmbeddingRequestInput
{-# INLINE createEmbeddingRequestInputL #-}

-- | 'createEmbeddingRequestUser' Lens
createEmbeddingRequestUserL :: Lens_' CreateEmbeddingRequest (Maybe Text)
createEmbeddingRequestUserL f CreateEmbeddingRequest{..} = (\createEmbeddingRequestUser -> CreateEmbeddingRequest { createEmbeddingRequestUser, ..} ) <$> f createEmbeddingRequestUser
{-# INLINE createEmbeddingRequestUserL #-}



-- * CreateEmbeddingRequestInput



-- * CreateEmbeddingRequestModel



-- * CreateEmbeddingResponse

-- | 'createEmbeddingResponseObject' Lens
createEmbeddingResponseObjectL :: Lens_' CreateEmbeddingResponse (Text)
createEmbeddingResponseObjectL f CreateEmbeddingResponse{..} = (\createEmbeddingResponseObject -> CreateEmbeddingResponse { createEmbeddingResponseObject, ..} ) <$> f createEmbeddingResponseObject
{-# INLINE createEmbeddingResponseObjectL #-}

-- | 'createEmbeddingResponseModel' Lens
createEmbeddingResponseModelL :: Lens_' CreateEmbeddingResponse (Text)
createEmbeddingResponseModelL f CreateEmbeddingResponse{..} = (\createEmbeddingResponseModel -> CreateEmbeddingResponse { createEmbeddingResponseModel, ..} ) <$> f createEmbeddingResponseModel
{-# INLINE createEmbeddingResponseModelL #-}

-- | 'createEmbeddingResponseData' Lens
createEmbeddingResponseDataL :: Lens_' CreateEmbeddingResponse ([CreateEmbeddingResponseDataInner])
createEmbeddingResponseDataL f CreateEmbeddingResponse{..} = (\createEmbeddingResponseData -> CreateEmbeddingResponse { createEmbeddingResponseData, ..} ) <$> f createEmbeddingResponseData
{-# INLINE createEmbeddingResponseDataL #-}

-- | 'createEmbeddingResponseUsage' Lens
createEmbeddingResponseUsageL :: Lens_' CreateEmbeddingResponse (CreateEmbeddingResponseUsage)
createEmbeddingResponseUsageL f CreateEmbeddingResponse{..} = (\createEmbeddingResponseUsage -> CreateEmbeddingResponse { createEmbeddingResponseUsage, ..} ) <$> f createEmbeddingResponseUsage
{-# INLINE createEmbeddingResponseUsageL #-}



-- * CreateEmbeddingResponseDataInner

-- | 'createEmbeddingResponseDataInnerIndex' Lens
createEmbeddingResponseDataInnerIndexL :: Lens_' CreateEmbeddingResponseDataInner (Int)
createEmbeddingResponseDataInnerIndexL f CreateEmbeddingResponseDataInner{..} = (\createEmbeddingResponseDataInnerIndex -> CreateEmbeddingResponseDataInner { createEmbeddingResponseDataInnerIndex, ..} ) <$> f createEmbeddingResponseDataInnerIndex
{-# INLINE createEmbeddingResponseDataInnerIndexL #-}

-- | 'createEmbeddingResponseDataInnerObject' Lens
createEmbeddingResponseDataInnerObjectL :: Lens_' CreateEmbeddingResponseDataInner (Text)
createEmbeddingResponseDataInnerObjectL f CreateEmbeddingResponseDataInner{..} = (\createEmbeddingResponseDataInnerObject -> CreateEmbeddingResponseDataInner { createEmbeddingResponseDataInnerObject, ..} ) <$> f createEmbeddingResponseDataInnerObject
{-# INLINE createEmbeddingResponseDataInnerObjectL #-}

-- | 'createEmbeddingResponseDataInnerEmbedding' Lens
createEmbeddingResponseDataInnerEmbeddingL :: Lens_' CreateEmbeddingResponseDataInner ([Double])
createEmbeddingResponseDataInnerEmbeddingL f CreateEmbeddingResponseDataInner{..} = (\createEmbeddingResponseDataInnerEmbedding -> CreateEmbeddingResponseDataInner { createEmbeddingResponseDataInnerEmbedding, ..} ) <$> f createEmbeddingResponseDataInnerEmbedding
{-# INLINE createEmbeddingResponseDataInnerEmbeddingL #-}



-- * CreateEmbeddingResponseUsage

-- | 'createEmbeddingResponseUsagePromptTokens' Lens
createEmbeddingResponseUsagePromptTokensL :: Lens_' CreateEmbeddingResponseUsage (Int)
createEmbeddingResponseUsagePromptTokensL f CreateEmbeddingResponseUsage{..} = (\createEmbeddingResponseUsagePromptTokens -> CreateEmbeddingResponseUsage { createEmbeddingResponseUsagePromptTokens, ..} ) <$> f createEmbeddingResponseUsagePromptTokens
{-# INLINE createEmbeddingResponseUsagePromptTokensL #-}

-- | 'createEmbeddingResponseUsageTotalTokens' Lens
createEmbeddingResponseUsageTotalTokensL :: Lens_' CreateEmbeddingResponseUsage (Int)
createEmbeddingResponseUsageTotalTokensL f CreateEmbeddingResponseUsage{..} = (\createEmbeddingResponseUsageTotalTokens -> CreateEmbeddingResponseUsage { createEmbeddingResponseUsageTotalTokens, ..} ) <$> f createEmbeddingResponseUsageTotalTokens
{-# INLINE createEmbeddingResponseUsageTotalTokensL #-}



-- * CreateFineTuneRequest

-- | 'createFineTuneRequestTrainingFile' Lens
createFineTuneRequestTrainingFileL :: Lens_' CreateFineTuneRequest (Text)
createFineTuneRequestTrainingFileL f CreateFineTuneRequest{..} = (\createFineTuneRequestTrainingFile -> CreateFineTuneRequest { createFineTuneRequestTrainingFile, ..} ) <$> f createFineTuneRequestTrainingFile
{-# INLINE createFineTuneRequestTrainingFileL #-}

-- | 'createFineTuneRequestValidationFile' Lens
createFineTuneRequestValidationFileL :: Lens_' CreateFineTuneRequest (Maybe Text)
createFineTuneRequestValidationFileL f CreateFineTuneRequest{..} = (\createFineTuneRequestValidationFile -> CreateFineTuneRequest { createFineTuneRequestValidationFile, ..} ) <$> f createFineTuneRequestValidationFile
{-# INLINE createFineTuneRequestValidationFileL #-}

-- | 'createFineTuneRequestModel' Lens
createFineTuneRequestModelL :: Lens_' CreateFineTuneRequest (Maybe CreateFineTuneRequestModel)
createFineTuneRequestModelL f CreateFineTuneRequest{..} = (\createFineTuneRequestModel -> CreateFineTuneRequest { createFineTuneRequestModel, ..} ) <$> f createFineTuneRequestModel
{-# INLINE createFineTuneRequestModelL #-}

-- | 'createFineTuneRequestNEpochs' Lens
createFineTuneRequestNEpochsL :: Lens_' CreateFineTuneRequest (Maybe Int)
createFineTuneRequestNEpochsL f CreateFineTuneRequest{..} = (\createFineTuneRequestNEpochs -> CreateFineTuneRequest { createFineTuneRequestNEpochs, ..} ) <$> f createFineTuneRequestNEpochs
{-# INLINE createFineTuneRequestNEpochsL #-}

-- | 'createFineTuneRequestBatchSize' Lens
createFineTuneRequestBatchSizeL :: Lens_' CreateFineTuneRequest (Maybe Int)
createFineTuneRequestBatchSizeL f CreateFineTuneRequest{..} = (\createFineTuneRequestBatchSize -> CreateFineTuneRequest { createFineTuneRequestBatchSize, ..} ) <$> f createFineTuneRequestBatchSize
{-# INLINE createFineTuneRequestBatchSizeL #-}

-- | 'createFineTuneRequestLearningRateMultiplier' Lens
createFineTuneRequestLearningRateMultiplierL :: Lens_' CreateFineTuneRequest (Maybe Double)
createFineTuneRequestLearningRateMultiplierL f CreateFineTuneRequest{..} = (\createFineTuneRequestLearningRateMultiplier -> CreateFineTuneRequest { createFineTuneRequestLearningRateMultiplier, ..} ) <$> f createFineTuneRequestLearningRateMultiplier
{-# INLINE createFineTuneRequestLearningRateMultiplierL #-}

-- | 'createFineTuneRequestPromptLossWeight' Lens
createFineTuneRequestPromptLossWeightL :: Lens_' CreateFineTuneRequest (Maybe Double)
createFineTuneRequestPromptLossWeightL f CreateFineTuneRequest{..} = (\createFineTuneRequestPromptLossWeight -> CreateFineTuneRequest { createFineTuneRequestPromptLossWeight, ..} ) <$> f createFineTuneRequestPromptLossWeight
{-# INLINE createFineTuneRequestPromptLossWeightL #-}

-- | 'createFineTuneRequestComputeClassificationMetrics' Lens
createFineTuneRequestComputeClassificationMetricsL :: Lens_' CreateFineTuneRequest (Maybe Bool)
createFineTuneRequestComputeClassificationMetricsL f CreateFineTuneRequest{..} = (\createFineTuneRequestComputeClassificationMetrics -> CreateFineTuneRequest { createFineTuneRequestComputeClassificationMetrics, ..} ) <$> f createFineTuneRequestComputeClassificationMetrics
{-# INLINE createFineTuneRequestComputeClassificationMetricsL #-}

-- | 'createFineTuneRequestClassificationNClasses' Lens
createFineTuneRequestClassificationNClassesL :: Lens_' CreateFineTuneRequest (Maybe Int)
createFineTuneRequestClassificationNClassesL f CreateFineTuneRequest{..} = (\createFineTuneRequestClassificationNClasses -> CreateFineTuneRequest { createFineTuneRequestClassificationNClasses, ..} ) <$> f createFineTuneRequestClassificationNClasses
{-# INLINE createFineTuneRequestClassificationNClassesL #-}

-- | 'createFineTuneRequestClassificationPositiveClass' Lens
createFineTuneRequestClassificationPositiveClassL :: Lens_' CreateFineTuneRequest (Maybe Text)
createFineTuneRequestClassificationPositiveClassL f CreateFineTuneRequest{..} = (\createFineTuneRequestClassificationPositiveClass -> CreateFineTuneRequest { createFineTuneRequestClassificationPositiveClass, ..} ) <$> f createFineTuneRequestClassificationPositiveClass
{-# INLINE createFineTuneRequestClassificationPositiveClassL #-}

-- | 'createFineTuneRequestClassificationBetas' Lens
createFineTuneRequestClassificationBetasL :: Lens_' CreateFineTuneRequest (Maybe [Double])
createFineTuneRequestClassificationBetasL f CreateFineTuneRequest{..} = (\createFineTuneRequestClassificationBetas -> CreateFineTuneRequest { createFineTuneRequestClassificationBetas, ..} ) <$> f createFineTuneRequestClassificationBetas
{-# INLINE createFineTuneRequestClassificationBetasL #-}

-- | 'createFineTuneRequestSuffix' Lens
createFineTuneRequestSuffixL :: Lens_' CreateFineTuneRequest (Maybe Text)
createFineTuneRequestSuffixL f CreateFineTuneRequest{..} = (\createFineTuneRequestSuffix -> CreateFineTuneRequest { createFineTuneRequestSuffix, ..} ) <$> f createFineTuneRequestSuffix
{-# INLINE createFineTuneRequestSuffixL #-}



-- * CreateFineTuneRequestModel



-- * CreateImageRequest

-- | 'createImageRequestPrompt' Lens
createImageRequestPromptL :: Lens_' CreateImageRequest (Text)
createImageRequestPromptL f CreateImageRequest{..} = (\createImageRequestPrompt -> CreateImageRequest { createImageRequestPrompt, ..} ) <$> f createImageRequestPrompt
{-# INLINE createImageRequestPromptL #-}

-- | 'createImageRequestN' Lens
createImageRequestNL :: Lens_' CreateImageRequest (Maybe Int)
createImageRequestNL f CreateImageRequest{..} = (\createImageRequestN -> CreateImageRequest { createImageRequestN, ..} ) <$> f createImageRequestN
{-# INLINE createImageRequestNL #-}

-- | 'createImageRequestSize' Lens
createImageRequestSizeL :: Lens_' CreateImageRequest (Maybe E'Size)
createImageRequestSizeL f CreateImageRequest{..} = (\createImageRequestSize -> CreateImageRequest { createImageRequestSize, ..} ) <$> f createImageRequestSize
{-# INLINE createImageRequestSizeL #-}

-- | 'createImageRequestResponseFormat' Lens
createImageRequestResponseFormatL :: Lens_' CreateImageRequest (Maybe E'ResponseFormat)
createImageRequestResponseFormatL f CreateImageRequest{..} = (\createImageRequestResponseFormat -> CreateImageRequest { createImageRequestResponseFormat, ..} ) <$> f createImageRequestResponseFormat
{-# INLINE createImageRequestResponseFormatL #-}

-- | 'createImageRequestUser' Lens
createImageRequestUserL :: Lens_' CreateImageRequest (Maybe Text)
createImageRequestUserL f CreateImageRequest{..} = (\createImageRequestUser -> CreateImageRequest { createImageRequestUser, ..} ) <$> f createImageRequestUser
{-# INLINE createImageRequestUserL #-}



-- * CreateModerationRequest

-- | 'createModerationRequestInput' Lens
createModerationRequestInputL :: Lens_' CreateModerationRequest (CreateModerationRequestInput)
createModerationRequestInputL f CreateModerationRequest{..} = (\createModerationRequestInput -> CreateModerationRequest { createModerationRequestInput, ..} ) <$> f createModerationRequestInput
{-# INLINE createModerationRequestInputL #-}

-- | 'createModerationRequestModel' Lens
createModerationRequestModelL :: Lens_' CreateModerationRequest (Maybe CreateModerationRequestModel)
createModerationRequestModelL f CreateModerationRequest{..} = (\createModerationRequestModel -> CreateModerationRequest { createModerationRequestModel, ..} ) <$> f createModerationRequestModel
{-# INLINE createModerationRequestModelL #-}



-- * CreateModerationRequestInput



-- * CreateModerationRequestModel



-- * CreateModerationResponse

-- | 'createModerationResponseId' Lens
createModerationResponseIdL :: Lens_' CreateModerationResponse (Text)
createModerationResponseIdL f CreateModerationResponse{..} = (\createModerationResponseId -> CreateModerationResponse { createModerationResponseId, ..} ) <$> f createModerationResponseId
{-# INLINE createModerationResponseIdL #-}

-- | 'createModerationResponseModel' Lens
createModerationResponseModelL :: Lens_' CreateModerationResponse (Text)
createModerationResponseModelL f CreateModerationResponse{..} = (\createModerationResponseModel -> CreateModerationResponse { createModerationResponseModel, ..} ) <$> f createModerationResponseModel
{-# INLINE createModerationResponseModelL #-}

-- | 'createModerationResponseResults' Lens
createModerationResponseResultsL :: Lens_' CreateModerationResponse ([CreateModerationResponseResultsInner])
createModerationResponseResultsL f CreateModerationResponse{..} = (\createModerationResponseResults -> CreateModerationResponse { createModerationResponseResults, ..} ) <$> f createModerationResponseResults
{-# INLINE createModerationResponseResultsL #-}



-- * CreateModerationResponseResultsInner

-- | 'createModerationResponseResultsInnerFlagged' Lens
createModerationResponseResultsInnerFlaggedL :: Lens_' CreateModerationResponseResultsInner (Bool)
createModerationResponseResultsInnerFlaggedL f CreateModerationResponseResultsInner{..} = (\createModerationResponseResultsInnerFlagged -> CreateModerationResponseResultsInner { createModerationResponseResultsInnerFlagged, ..} ) <$> f createModerationResponseResultsInnerFlagged
{-# INLINE createModerationResponseResultsInnerFlaggedL #-}

-- | 'createModerationResponseResultsInnerCategories' Lens
createModerationResponseResultsInnerCategoriesL :: Lens_' CreateModerationResponseResultsInner (CreateModerationResponseResultsInnerCategories)
createModerationResponseResultsInnerCategoriesL f CreateModerationResponseResultsInner{..} = (\createModerationResponseResultsInnerCategories -> CreateModerationResponseResultsInner { createModerationResponseResultsInnerCategories, ..} ) <$> f createModerationResponseResultsInnerCategories
{-# INLINE createModerationResponseResultsInnerCategoriesL #-}

-- | 'createModerationResponseResultsInnerCategoryScores' Lens
createModerationResponseResultsInnerCategoryScoresL :: Lens_' CreateModerationResponseResultsInner (CreateModerationResponseResultsInnerCategoryScores)
createModerationResponseResultsInnerCategoryScoresL f CreateModerationResponseResultsInner{..} = (\createModerationResponseResultsInnerCategoryScores -> CreateModerationResponseResultsInner { createModerationResponseResultsInnerCategoryScores, ..} ) <$> f createModerationResponseResultsInnerCategoryScores
{-# INLINE createModerationResponseResultsInnerCategoryScoresL #-}



-- * CreateModerationResponseResultsInnerCategories

-- | 'createModerationResponseResultsInnerCategoriesHate' Lens
createModerationResponseResultsInnerCategoriesHateL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesHateL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesHate -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesHate, ..} ) <$> f createModerationResponseResultsInnerCategoriesHate
{-# INLINE createModerationResponseResultsInnerCategoriesHateL #-}

-- | 'createModerationResponseResultsInnerCategoriesHateThreatening' Lens
createModerationResponseResultsInnerCategoriesHateThreateningL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesHateThreateningL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesHateThreatening -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesHateThreatening, ..} ) <$> f createModerationResponseResultsInnerCategoriesHateThreatening
{-# INLINE createModerationResponseResultsInnerCategoriesHateThreateningL #-}

-- | 'createModerationResponseResultsInnerCategoriesSelfHarm' Lens
createModerationResponseResultsInnerCategoriesSelfHarmL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesSelfHarmL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesSelfHarm -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesSelfHarm, ..} ) <$> f createModerationResponseResultsInnerCategoriesSelfHarm
{-# INLINE createModerationResponseResultsInnerCategoriesSelfHarmL #-}

-- | 'createModerationResponseResultsInnerCategoriesSexual' Lens
createModerationResponseResultsInnerCategoriesSexualL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesSexualL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesSexual -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesSexual, ..} ) <$> f createModerationResponseResultsInnerCategoriesSexual
{-# INLINE createModerationResponseResultsInnerCategoriesSexualL #-}

-- | 'createModerationResponseResultsInnerCategoriesSexualMinors' Lens
createModerationResponseResultsInnerCategoriesSexualMinorsL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesSexualMinorsL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesSexualMinors -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesSexualMinors, ..} ) <$> f createModerationResponseResultsInnerCategoriesSexualMinors
{-# INLINE createModerationResponseResultsInnerCategoriesSexualMinorsL #-}

-- | 'createModerationResponseResultsInnerCategoriesViolence' Lens
createModerationResponseResultsInnerCategoriesViolenceL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesViolenceL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesViolence -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesViolence, ..} ) <$> f createModerationResponseResultsInnerCategoriesViolence
{-# INLINE createModerationResponseResultsInnerCategoriesViolenceL #-}

-- | 'createModerationResponseResultsInnerCategoriesViolenceGraphic' Lens
createModerationResponseResultsInnerCategoriesViolenceGraphicL :: Lens_' CreateModerationResponseResultsInnerCategories (Bool)
createModerationResponseResultsInnerCategoriesViolenceGraphicL f CreateModerationResponseResultsInnerCategories{..} = (\createModerationResponseResultsInnerCategoriesViolenceGraphic -> CreateModerationResponseResultsInnerCategories { createModerationResponseResultsInnerCategoriesViolenceGraphic, ..} ) <$> f createModerationResponseResultsInnerCategoriesViolenceGraphic
{-# INLINE createModerationResponseResultsInnerCategoriesViolenceGraphicL #-}



-- * CreateModerationResponseResultsInnerCategoryScores

-- | 'createModerationResponseResultsInnerCategoryScoresHate' Lens
createModerationResponseResultsInnerCategoryScoresHateL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresHateL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresHate -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresHate, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresHate
{-# INLINE createModerationResponseResultsInnerCategoryScoresHateL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresHateThreatening' Lens
createModerationResponseResultsInnerCategoryScoresHateThreateningL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresHateThreateningL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresHateThreatening -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresHateThreatening, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresHateThreatening
{-# INLINE createModerationResponseResultsInnerCategoryScoresHateThreateningL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresSelfHarm' Lens
createModerationResponseResultsInnerCategoryScoresSelfHarmL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresSelfHarmL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresSelfHarm -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresSelfHarm, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresSelfHarm
{-# INLINE createModerationResponseResultsInnerCategoryScoresSelfHarmL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresSexual' Lens
createModerationResponseResultsInnerCategoryScoresSexualL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresSexualL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresSexual -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresSexual, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresSexual
{-# INLINE createModerationResponseResultsInnerCategoryScoresSexualL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresSexualMinors' Lens
createModerationResponseResultsInnerCategoryScoresSexualMinorsL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresSexualMinorsL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresSexualMinors -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresSexualMinors, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresSexualMinors
{-# INLINE createModerationResponseResultsInnerCategoryScoresSexualMinorsL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresViolence' Lens
createModerationResponseResultsInnerCategoryScoresViolenceL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresViolenceL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresViolence -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresViolence, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresViolence
{-# INLINE createModerationResponseResultsInnerCategoryScoresViolenceL #-}

-- | 'createModerationResponseResultsInnerCategoryScoresViolenceGraphic' Lens
createModerationResponseResultsInnerCategoryScoresViolenceGraphicL :: Lens_' CreateModerationResponseResultsInnerCategoryScores (Double)
createModerationResponseResultsInnerCategoryScoresViolenceGraphicL f CreateModerationResponseResultsInnerCategoryScores{..} = (\createModerationResponseResultsInnerCategoryScoresViolenceGraphic -> CreateModerationResponseResultsInnerCategoryScores { createModerationResponseResultsInnerCategoryScoresViolenceGraphic, ..} ) <$> f createModerationResponseResultsInnerCategoryScoresViolenceGraphic
{-# INLINE createModerationResponseResultsInnerCategoryScoresViolenceGraphicL #-}



-- * CreateTranscriptionResponse

-- | 'createTranscriptionResponseText' Lens
createTranscriptionResponseTextL :: Lens_' CreateTranscriptionResponse (Text)
createTranscriptionResponseTextL f CreateTranscriptionResponse{..} = (\createTranscriptionResponseText -> CreateTranscriptionResponse { createTranscriptionResponseText, ..} ) <$> f createTranscriptionResponseText
{-# INLINE createTranscriptionResponseTextL #-}



-- * CreateTranslationResponse

-- | 'createTranslationResponseText' Lens
createTranslationResponseTextL :: Lens_' CreateTranslationResponse (Text)
createTranslationResponseTextL f CreateTranslationResponse{..} = (\createTranslationResponseText -> CreateTranslationResponse { createTranslationResponseText, ..} ) <$> f createTranslationResponseText
{-# INLINE createTranslationResponseTextL #-}



-- * DeleteFileResponse

-- | 'deleteFileResponseId' Lens
deleteFileResponseIdL :: Lens_' DeleteFileResponse (Text)
deleteFileResponseIdL f DeleteFileResponse{..} = (\deleteFileResponseId -> DeleteFileResponse { deleteFileResponseId, ..} ) <$> f deleteFileResponseId
{-# INLINE deleteFileResponseIdL #-}

-- | 'deleteFileResponseObject' Lens
deleteFileResponseObjectL :: Lens_' DeleteFileResponse (Text)
deleteFileResponseObjectL f DeleteFileResponse{..} = (\deleteFileResponseObject -> DeleteFileResponse { deleteFileResponseObject, ..} ) <$> f deleteFileResponseObject
{-# INLINE deleteFileResponseObjectL #-}

-- | 'deleteFileResponseDeleted' Lens
deleteFileResponseDeletedL :: Lens_' DeleteFileResponse (Bool)
deleteFileResponseDeletedL f DeleteFileResponse{..} = (\deleteFileResponseDeleted -> DeleteFileResponse { deleteFileResponseDeleted, ..} ) <$> f deleteFileResponseDeleted
{-# INLINE deleteFileResponseDeletedL #-}



-- * DeleteModelResponse

-- | 'deleteModelResponseId' Lens
deleteModelResponseIdL :: Lens_' DeleteModelResponse (Text)
deleteModelResponseIdL f DeleteModelResponse{..} = (\deleteModelResponseId -> DeleteModelResponse { deleteModelResponseId, ..} ) <$> f deleteModelResponseId
{-# INLINE deleteModelResponseIdL #-}

-- | 'deleteModelResponseObject' Lens
deleteModelResponseObjectL :: Lens_' DeleteModelResponse (Text)
deleteModelResponseObjectL f DeleteModelResponse{..} = (\deleteModelResponseObject -> DeleteModelResponse { deleteModelResponseObject, ..} ) <$> f deleteModelResponseObject
{-# INLINE deleteModelResponseObjectL #-}

-- | 'deleteModelResponseDeleted' Lens
deleteModelResponseDeletedL :: Lens_' DeleteModelResponse (Bool)
deleteModelResponseDeletedL f DeleteModelResponse{..} = (\deleteModelResponseDeleted -> DeleteModelResponse { deleteModelResponseDeleted, ..} ) <$> f deleteModelResponseDeleted
{-# INLINE deleteModelResponseDeletedL #-}



-- * Error

-- | 'errorType' Lens
errorTypeL :: Lens_' Error (Text)
errorTypeL f Error{..} = (\errorType -> Error { errorType, ..} ) <$> f errorType
{-# INLINE errorTypeL #-}

-- | 'errorMessage' Lens
errorMessageL :: Lens_' Error (Text)
errorMessageL f Error{..} = (\errorMessage -> Error { errorMessage, ..} ) <$> f errorMessage
{-# INLINE errorMessageL #-}

-- | 'errorParam' Lens
errorParamL :: Lens_' Error (Text)
errorParamL f Error{..} = (\errorParam -> Error { errorParam, ..} ) <$> f errorParam
{-# INLINE errorParamL #-}

-- | 'errorCode' Lens
errorCodeL :: Lens_' Error (Text)
errorCodeL f Error{..} = (\errorCode -> Error { errorCode, ..} ) <$> f errorCode
{-# INLINE errorCodeL #-}



-- * ErrorResponse

-- | 'errorResponseError' Lens
errorResponseErrorL :: Lens_' ErrorResponse (Error)
errorResponseErrorL f ErrorResponse{..} = (\errorResponseError -> ErrorResponse { errorResponseError, ..} ) <$> f errorResponseError
{-# INLINE errorResponseErrorL #-}



-- * FineTune

-- | 'fineTuneId' Lens
fineTuneIdL :: Lens_' FineTune (Text)
fineTuneIdL f FineTune{..} = (\fineTuneId -> FineTune { fineTuneId, ..} ) <$> f fineTuneId
{-# INLINE fineTuneIdL #-}

-- | 'fineTuneObject' Lens
fineTuneObjectL :: Lens_' FineTune (Text)
fineTuneObjectL f FineTune{..} = (\fineTuneObject -> FineTune { fineTuneObject, ..} ) <$> f fineTuneObject
{-# INLINE fineTuneObjectL #-}

-- | 'fineTuneCreatedAt' Lens
fineTuneCreatedAtL :: Lens_' FineTune (Int)
fineTuneCreatedAtL f FineTune{..} = (\fineTuneCreatedAt -> FineTune { fineTuneCreatedAt, ..} ) <$> f fineTuneCreatedAt
{-# INLINE fineTuneCreatedAtL #-}

-- | 'fineTuneUpdatedAt' Lens
fineTuneUpdatedAtL :: Lens_' FineTune (Int)
fineTuneUpdatedAtL f FineTune{..} = (\fineTuneUpdatedAt -> FineTune { fineTuneUpdatedAt, ..} ) <$> f fineTuneUpdatedAt
{-# INLINE fineTuneUpdatedAtL #-}

-- | 'fineTuneModel' Lens
fineTuneModelL :: Lens_' FineTune (Text)
fineTuneModelL f FineTune{..} = (\fineTuneModel -> FineTune { fineTuneModel, ..} ) <$> f fineTuneModel
{-# INLINE fineTuneModelL #-}

-- | 'fineTuneFineTunedModel' Lens
fineTuneFineTunedModelL :: Lens_' FineTune (Text)
fineTuneFineTunedModelL f FineTune{..} = (\fineTuneFineTunedModel -> FineTune { fineTuneFineTunedModel, ..} ) <$> f fineTuneFineTunedModel
{-# INLINE fineTuneFineTunedModelL #-}

-- | 'fineTuneOrganizationId' Lens
fineTuneOrganizationIdL :: Lens_' FineTune (Text)
fineTuneOrganizationIdL f FineTune{..} = (\fineTuneOrganizationId -> FineTune { fineTuneOrganizationId, ..} ) <$> f fineTuneOrganizationId
{-# INLINE fineTuneOrganizationIdL #-}

-- | 'fineTuneStatus' Lens
fineTuneStatusL :: Lens_' FineTune (Text)
fineTuneStatusL f FineTune{..} = (\fineTuneStatus -> FineTune { fineTuneStatus, ..} ) <$> f fineTuneStatus
{-# INLINE fineTuneStatusL #-}

-- | 'fineTuneHyperparams' Lens
fineTuneHyperparamsL :: Lens_' FineTune (A.Value)
fineTuneHyperparamsL f FineTune{..} = (\fineTuneHyperparams -> FineTune { fineTuneHyperparams, ..} ) <$> f fineTuneHyperparams
{-# INLINE fineTuneHyperparamsL #-}

-- | 'fineTuneTrainingFiles' Lens
fineTuneTrainingFilesL :: Lens_' FineTune ([OpenAIFile])
fineTuneTrainingFilesL f FineTune{..} = (\fineTuneTrainingFiles -> FineTune { fineTuneTrainingFiles, ..} ) <$> f fineTuneTrainingFiles
{-# INLINE fineTuneTrainingFilesL #-}

-- | 'fineTuneValidationFiles' Lens
fineTuneValidationFilesL :: Lens_' FineTune ([OpenAIFile])
fineTuneValidationFilesL f FineTune{..} = (\fineTuneValidationFiles -> FineTune { fineTuneValidationFiles, ..} ) <$> f fineTuneValidationFiles
{-# INLINE fineTuneValidationFilesL #-}

-- | 'fineTuneResultFiles' Lens
fineTuneResultFilesL :: Lens_' FineTune ([OpenAIFile])
fineTuneResultFilesL f FineTune{..} = (\fineTuneResultFiles -> FineTune { fineTuneResultFiles, ..} ) <$> f fineTuneResultFiles
{-# INLINE fineTuneResultFilesL #-}

-- | 'fineTuneEvents' Lens
fineTuneEventsL :: Lens_' FineTune (Maybe [FineTuneEvent])
fineTuneEventsL f FineTune{..} = (\fineTuneEvents -> FineTune { fineTuneEvents, ..} ) <$> f fineTuneEvents
{-# INLINE fineTuneEventsL #-}



-- * FineTuneEvent

-- | 'fineTuneEventObject' Lens
fineTuneEventObjectL :: Lens_' FineTuneEvent (Text)
fineTuneEventObjectL f FineTuneEvent{..} = (\fineTuneEventObject -> FineTuneEvent { fineTuneEventObject, ..} ) <$> f fineTuneEventObject
{-# INLINE fineTuneEventObjectL #-}

-- | 'fineTuneEventCreatedAt' Lens
fineTuneEventCreatedAtL :: Lens_' FineTuneEvent (Int)
fineTuneEventCreatedAtL f FineTuneEvent{..} = (\fineTuneEventCreatedAt -> FineTuneEvent { fineTuneEventCreatedAt, ..} ) <$> f fineTuneEventCreatedAt
{-# INLINE fineTuneEventCreatedAtL #-}

-- | 'fineTuneEventLevel' Lens
fineTuneEventLevelL :: Lens_' FineTuneEvent (Text)
fineTuneEventLevelL f FineTuneEvent{..} = (\fineTuneEventLevel -> FineTuneEvent { fineTuneEventLevel, ..} ) <$> f fineTuneEventLevel
{-# INLINE fineTuneEventLevelL #-}

-- | 'fineTuneEventMessage' Lens
fineTuneEventMessageL :: Lens_' FineTuneEvent (Text)
fineTuneEventMessageL f FineTuneEvent{..} = (\fineTuneEventMessage -> FineTuneEvent { fineTuneEventMessage, ..} ) <$> f fineTuneEventMessage
{-# INLINE fineTuneEventMessageL #-}



-- * ImagesResponse

-- | 'imagesResponseCreated' Lens
imagesResponseCreatedL :: Lens_' ImagesResponse (Int)
imagesResponseCreatedL f ImagesResponse{..} = (\imagesResponseCreated -> ImagesResponse { imagesResponseCreated, ..} ) <$> f imagesResponseCreated
{-# INLINE imagesResponseCreatedL #-}

-- | 'imagesResponseData' Lens
imagesResponseDataL :: Lens_' ImagesResponse ([ImagesResponseDataInner])
imagesResponseDataL f ImagesResponse{..} = (\imagesResponseData -> ImagesResponse { imagesResponseData, ..} ) <$> f imagesResponseData
{-# INLINE imagesResponseDataL #-}



-- * ImagesResponseDataInner

-- | 'imagesResponseDataInnerUrl' Lens
imagesResponseDataInnerUrlL :: Lens_' ImagesResponseDataInner (Maybe Text)
imagesResponseDataInnerUrlL f ImagesResponseDataInner{..} = (\imagesResponseDataInnerUrl -> ImagesResponseDataInner { imagesResponseDataInnerUrl, ..} ) <$> f imagesResponseDataInnerUrl
{-# INLINE imagesResponseDataInnerUrlL #-}

-- | 'imagesResponseDataInnerB64Json' Lens
imagesResponseDataInnerB64JsonL :: Lens_' ImagesResponseDataInner (Maybe Text)
imagesResponseDataInnerB64JsonL f ImagesResponseDataInner{..} = (\imagesResponseDataInnerB64Json -> ImagesResponseDataInner { imagesResponseDataInnerB64Json, ..} ) <$> f imagesResponseDataInnerB64Json
{-# INLINE imagesResponseDataInnerB64JsonL #-}



-- * ListFilesResponse

-- | 'listFilesResponseObject' Lens
listFilesResponseObjectL :: Lens_' ListFilesResponse (Text)
listFilesResponseObjectL f ListFilesResponse{..} = (\listFilesResponseObject -> ListFilesResponse { listFilesResponseObject, ..} ) <$> f listFilesResponseObject
{-# INLINE listFilesResponseObjectL #-}

-- | 'listFilesResponseData' Lens
listFilesResponseDataL :: Lens_' ListFilesResponse ([OpenAIFile])
listFilesResponseDataL f ListFilesResponse{..} = (\listFilesResponseData -> ListFilesResponse { listFilesResponseData, ..} ) <$> f listFilesResponseData
{-# INLINE listFilesResponseDataL #-}



-- * ListFineTuneEventsResponse

-- | 'listFineTuneEventsResponseObject' Lens
listFineTuneEventsResponseObjectL :: Lens_' ListFineTuneEventsResponse (Text)
listFineTuneEventsResponseObjectL f ListFineTuneEventsResponse{..} = (\listFineTuneEventsResponseObject -> ListFineTuneEventsResponse { listFineTuneEventsResponseObject, ..} ) <$> f listFineTuneEventsResponseObject
{-# INLINE listFineTuneEventsResponseObjectL #-}

-- | 'listFineTuneEventsResponseData' Lens
listFineTuneEventsResponseDataL :: Lens_' ListFineTuneEventsResponse ([FineTuneEvent])
listFineTuneEventsResponseDataL f ListFineTuneEventsResponse{..} = (\listFineTuneEventsResponseData -> ListFineTuneEventsResponse { listFineTuneEventsResponseData, ..} ) <$> f listFineTuneEventsResponseData
{-# INLINE listFineTuneEventsResponseDataL #-}



-- * ListFineTunesResponse

-- | 'listFineTunesResponseObject' Lens
listFineTunesResponseObjectL :: Lens_' ListFineTunesResponse (Text)
listFineTunesResponseObjectL f ListFineTunesResponse{..} = (\listFineTunesResponseObject -> ListFineTunesResponse { listFineTunesResponseObject, ..} ) <$> f listFineTunesResponseObject
{-# INLINE listFineTunesResponseObjectL #-}

-- | 'listFineTunesResponseData' Lens
listFineTunesResponseDataL :: Lens_' ListFineTunesResponse ([FineTune])
listFineTunesResponseDataL f ListFineTunesResponse{..} = (\listFineTunesResponseData -> ListFineTunesResponse { listFineTunesResponseData, ..} ) <$> f listFineTunesResponseData
{-# INLINE listFineTunesResponseDataL #-}



-- * ListModelsResponse

-- | 'listModelsResponseObject' Lens
listModelsResponseObjectL :: Lens_' ListModelsResponse (Text)
listModelsResponseObjectL f ListModelsResponse{..} = (\listModelsResponseObject -> ListModelsResponse { listModelsResponseObject, ..} ) <$> f listModelsResponseObject
{-# INLINE listModelsResponseObjectL #-}

-- | 'listModelsResponseData' Lens
listModelsResponseDataL :: Lens_' ListModelsResponse ([Model])
listModelsResponseDataL f ListModelsResponse{..} = (\listModelsResponseData -> ListModelsResponse { listModelsResponseData, ..} ) <$> f listModelsResponseData
{-# INLINE listModelsResponseDataL #-}



-- * Model

-- | 'modelId' Lens
modelIdL :: Lens_' Model (Text)
modelIdL f Model{..} = (\modelId -> Model { modelId, ..} ) <$> f modelId
{-# INLINE modelIdL #-}

-- | 'modelObject' Lens
modelObjectL :: Lens_' Model (Text)
modelObjectL f Model{..} = (\modelObject -> Model { modelObject, ..} ) <$> f modelObject
{-# INLINE modelObjectL #-}

-- | 'modelCreated' Lens
modelCreatedL :: Lens_' Model (Int)
modelCreatedL f Model{..} = (\modelCreated -> Model { modelCreated, ..} ) <$> f modelCreated
{-# INLINE modelCreatedL #-}

-- | 'modelOwnedBy' Lens
modelOwnedByL :: Lens_' Model (Text)
modelOwnedByL f Model{..} = (\modelOwnedBy -> Model { modelOwnedBy, ..} ) <$> f modelOwnedBy
{-# INLINE modelOwnedByL #-}



-- * OpenAIFile

-- | 'openAIFileId' Lens
openAIFileIdL :: Lens_' OpenAIFile (Text)
openAIFileIdL f OpenAIFile{..} = (\openAIFileId -> OpenAIFile { openAIFileId, ..} ) <$> f openAIFileId
{-# INLINE openAIFileIdL #-}

-- | 'openAIFileObject' Lens
openAIFileObjectL :: Lens_' OpenAIFile (Text)
openAIFileObjectL f OpenAIFile{..} = (\openAIFileObject -> OpenAIFile { openAIFileObject, ..} ) <$> f openAIFileObject
{-# INLINE openAIFileObjectL #-}

-- | 'openAIFileBytes' Lens
openAIFileBytesL :: Lens_' OpenAIFile (Int)
openAIFileBytesL f OpenAIFile{..} = (\openAIFileBytes -> OpenAIFile { openAIFileBytes, ..} ) <$> f openAIFileBytes
{-# INLINE openAIFileBytesL #-}

-- | 'openAIFileCreatedAt' Lens
openAIFileCreatedAtL :: Lens_' OpenAIFile (Int)
openAIFileCreatedAtL f OpenAIFile{..} = (\openAIFileCreatedAt -> OpenAIFile { openAIFileCreatedAt, ..} ) <$> f openAIFileCreatedAt
{-# INLINE openAIFileCreatedAtL #-}

-- | 'openAIFileFilename' Lens
openAIFileFilenameL :: Lens_' OpenAIFile (Text)
openAIFileFilenameL f OpenAIFile{..} = (\openAIFileFilename -> OpenAIFile { openAIFileFilename, ..} ) <$> f openAIFileFilename
{-# INLINE openAIFileFilenameL #-}

-- | 'openAIFilePurpose' Lens
openAIFilePurposeL :: Lens_' OpenAIFile (Text)
openAIFilePurposeL f OpenAIFile{..} = (\openAIFilePurpose -> OpenAIFile { openAIFilePurpose, ..} ) <$> f openAIFilePurpose
{-# INLINE openAIFilePurposeL #-}

-- | 'openAIFileStatus' Lens
openAIFileStatusL :: Lens_' OpenAIFile (Maybe Text)
openAIFileStatusL f OpenAIFile{..} = (\openAIFileStatus -> OpenAIFile { openAIFileStatus, ..} ) <$> f openAIFileStatus
{-# INLINE openAIFileStatusL #-}

-- | 'openAIFileStatusDetails' Lens
openAIFileStatusDetailsL :: Lens_' OpenAIFile (Maybe A.Value)
openAIFileStatusDetailsL f OpenAIFile{..} = (\openAIFileStatusDetails -> OpenAIFile { openAIFileStatusDetails, ..} ) <$> f openAIFileStatusDetails
{-# INLINE openAIFileStatusDetailsL #-}


